<?php

return array (
  'accepted' => ':attribute should be accepted.',
  'accepted_if' => 'While the :other field has the value :value, :attribute should be accepted.',
  'active_url' => ':attribute must be a valid URL.',
  'after' => 'The value of :attribute must be after :date.',
  'after_or_equal' => 'The value of :attribute must be after or equal to :date.',
  'alpha' => ':attribute must consist of letters only.',
  'alpha_dash' => ':attribute must consist of letters, numbers and dashes only.',
  'alpha_num' => ':attribute must contain letters and numbers only.',
  'array' => ':attribute must be an array.',
  'before' => 'The value of :attribute must be before :date.',
  'before_or_equal' => 'The value of :attribute must be before or equal to :date.',
  'between' => 
  array (
    'numeric' => ':attribute must be between :min - :max.',
    'file' => ':attribute must be between :min - :max kilobytes in size.',
    'string' => 'It must consist of characters between :attribute :min - :max.',
    'array' => ':attribute must have objects between :min - :max.',
  ),
  'boolean' => ':attribute must only be true or false.',
  'confirmed' => 'The occurrence of :attribute does not match.',
  'current_password' => 'Password is invalid.',
  'date' => ':attribute must be a valid date.',
  'date_equals' => ':attribute and :date must be the same dates.',
  'date_format' => ':attribute does not match the format :format.',
  'declined' => 'The :attribute field should be rejected.',
  'declined_if' => 'The :attribute field should be rejected while the :other field has the value :value.',
  'different' => ':attribute and :other must be different from each other.',
  'digits' => ':attribute must consist of :digits digits.',
  'digits_between' => ':attribute must consist of digits between :min and :max.',
  'dimensions' => ':attribute image dimensions are invalid.',
  'distinct' => 'The field :attribute has a duplicate value.',
  'doesnt_end_with' => ':attribute must not end with: :values.',
  'doesnt_start_with' => ':attribute must not begin with: :values.',
  'email' => 'The email address entered in the :attribute field is invalid.',
  'ends_with' => ':attribute must end with :values',
  'enum' => 'The selected :attribute is invalid.',
  'exists' => 'The selected :attribute is invalid.',
  'file' => 'It should be :attribute file.',
  'filled' => 'The :attribute field is mandatory.',
  'gt' => 
  array (
    'numeric' => ':attribute must be greater than :value',
    'file' => ':attribute must be larger than :value kilobytes.',
    'string' => ':attribute must be longer than :value characters.',
    'array' => 'There must be more than :attribute, :value.',
  ),
  'gte' => 
  array (
    'numeric' => ':attribute must be as much or more than :value.',
    'file' => ':attribute must be the same or larger than the kilobyte size of :value.',
    'string' => ':attribute must be as long as or longer than :value characters.',
    'array' => 'There must be :attribute, :value or more.',
  ),
  'image' => 'The :attribute field must be an image file.',
  'in' => 'The value :attribute is invalid.',
  'in_array' => 'The field :attribute does not exist in :other.',
  'integer' => ':attribute must be an integer.',
  'ip' => ':attribute must be a valid IP address.',
  'ipv4' => ':attribute must be a valid IPv4 address.',
  'ipv6' => ':attribute must be a valid IPv6 address.',
  'json' => ':attribute must be a valid JSON variable.',
  'lt' => 
  array (
    'numeric' => ':attribute must be less than :value.',
    'file' => ':attribute must be less than :value kilobytes.',
    'string' => ':attribute must be shorter than :value characters.',
    'array' => ':attribute must be less than :value.',
  ),
  'lte' => 
  array (
    'numeric' => ':attribute must be as small or smaller than :value.',
    'file' => ':attribute must be the kilobyte size of :value or smaller.',
    'string' => ':attribute must be as short as :value characters or less.',
    'array' => 'There must be :attribute, :value or less.',
  ),
  'mac_address' => ':attribute must be a valid MAC address.',
  'max' => 
  array (
    'array' => 'The value :attribute must have fewer than :max objects.',
    'file' => 'The value of :attribute must be less than the value of :max kilobytes.',
    'numeric' => 'The value of :attribute must be less than the value of :max.',
    'string' => 'The value of :attribute must be less than :max characters.',
  ),
  'mimes' => 'The file format of :attribute should be :values.',
  'mimetypes' => 'The file format of :attribute should be :values.',
  'min' => 
  array (
    'array' => ':attribute must have at least :min objects.',
    'file' => 'The value of :attribute must be greater than the value of :min kilobytes.',
    'numeric' => 'The value of :attribute must be greater than the value of :min.',
    'string' => 'The value of :attribute must be greater than :min characters.',
  ),
  'min_digits' => ':attribute must be at least :min digits.',
  'multiple_of' => ':attribute must be the coefficient of the value :value.',
  'not_in' => 'The selected :attribute is invalid.',
  'not_regex' => 'The format :attribute is invalid.',
  'numeric' => ':attribute must be a number.',
  'password' => 
  array (
    'letters' => ':attribute must contain at least one letter.',
    'mixed' => ':attribute must contain at least one uppercase letter and at least one lowercase letter.',
    'numbers' => ':attribute must contain at least one digit.',
    'symbols' => ':attribute must contain at least one symbol (special character).',
    'uncompromised' => 'The entered :attribute was subject to a data leak. Please select a new :attribute.',
  ),
  'present' => 'The :attribute field must be present.',
  'prohibited' => 'Filling the :attribute field is prohibited.',
  'prohibited_if' => 'Filling the :attribute field is prohibited when the :other field has the value :value.',
  'prohibited_unless' => 'Filling the :attribute field is prohibited when the :other field does not have the value :values.',
  'prohibits' => 'The PLACEHOLDER _0__ field prohibits the PLACEHOLDER 1__ field from being present.',
  'regex' => 'The format :attribute is invalid.',
  'required' => 'The :attribute field is required.',
  'required_array_keys' => 'The :attribute field must have the following keys: :values.',
  'required_if' => 'The :attribute field is required when :other has the value :value.',
  'required_if_accepted' => 'The :attribute field is required when the :other field is accepted.',
  'required_unless' => 'The :attribute field is required when the :other field does not have one of the values ​​:value.',
  'required_with' => 'The :attribute field is required when :values exists.',
  'required_with_all' => 'The :attribute field is required when there is any value of :values.',
  'required_without' => 'The :attribute field is required when :values is absent.',
  'required_without_all' => 'The :attribute field is required when any of the :values values ​​are not present.',
  'same' => ':attribute must match :other.',
  'size' => 
  array (
    'array' => ':attribute must have :size object.',
    'file' => ':attribute :size must be kilobytes.',
    'numeric' => ':attribute should be :size.',
    'string' => ':attribute must be :size characters.',
  ),
  'starts_with' => ':attribute must start with one of the following: :values',
  'string' => ':attribute must be text.',
  'timezone' => ':attribute must be a valid timezone.',
  'unique' => ':attribute has been registered before.',
  'uploaded' => 'Installation of :attribute failed.',
  'url' => 'The format :attribute is invalid.',
  'uuid' => ':attribute must conform to a UUID format.',
  'custom' => 
  array (
    'x' => 
    array (
      'regex' => 'For field x, you must enter data in "a-b.c" format.',
    ),
  ),
  'attributes' => 
  array (
    'password' => 'field.password',
  ),
);
